@prefix : <http://ebiq.org/ontologies/peeps#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix swrl: <http://www.w3.org/2003/11/swrl#> .
@prefix peeps: <http://ebiq.org/ontologies/peeps/#> .
@prefix swrlb: <http://www.w3.org/2003/11/swrlb#> .
@base <http://ebiq.org/ontologies/peeps/> .

<http://ebiq.org/ontologies/peeps/> rdf:type owl:Ontology ;
                                     rdfs:label "An example ontology for people created in Protege." .

#################################################################
#    Annotation properties
#################################################################

###  http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled
<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> rdf:type owl:AnnotationProperty .


#################################################################
#    Object Properties
#################################################################

###  http://ebiq.org/ontologies/peeps/hasChild
:hasChild rdf:type owl:ObjectProperty ;
          owl:inverseOf peeps:hasParent ;
          rdf:type owl:AsymmetricProperty ,
                   owl:IrreflexiveProperty .


###  http://ebiq.org/ontologies/peeps/hasMother
:hasMother rdf:type owl:ObjectProperty ;
           rdfs:subPropertyOf peeps:hasParent ;
           rdf:type owl:FunctionalProperty ,
                    owl:AsymmetricProperty ,
                    owl:IrreflexiveProperty ;
           rdfs:domain peeps:Person ;
           rdfs:range peeps:Woman ;
           rdfs:comment "" .


###  http://ebiq.org/ontologies/peeps/olderThan
:olderThan rdf:type owl:ObjectProperty ;
           owl:inverseOf :youngerThan ;
           rdf:type owl:TransitiveProperty .


###  http://ebiq.org/ontologies/peeps/youngerThan
:youngerThan rdf:type owl:ObjectProperty ,
                      owl:TransitiveProperty ;
             rdfs:domain peeps:Person ;
             rdfs:range peeps:Person ;
             rdfs:comment "The is_yonger relation holds between two people if the the agent of the first is less than the age of the second." .


###  http://ebiq.org/ontologies/peeps/#hasGrandparent
peeps:hasGrandparent rdf:type owl:ObjectProperty ;
                     owl:propertyChainAxiom ( peeps:hasParent
                                              peeps:hasParent
                                            ) ;
                     rdfs:comment "The parent of a parent is a grandparent." .


###  http://ebiq.org/ontologies/peeps/#hasParent
peeps:hasParent rdf:type owl:ObjectProperty ,
                         owl:AsymmetricProperty ,
                         owl:IrreflexiveProperty ;
                rdfs:domain peeps:Person ;
                rdfs:range peeps:Person ;
                rdfs:comment "The hasParent relation links a person to her biological parents.  Note that we specify in the definition of person that ecery person has one parent that is a Man and one person that is a Woman." ;
                rdfs:label "parent" .


#################################################################
#    Data properties
#################################################################

###  http://ebiq.org/ontologies/peeps/#hasAge
peeps:hasAge rdf:type owl:DatatypeProperty ,
                      owl:FunctionalProperty ;
             rdfs:domain peeps:Person ;
             rdfs:range xsd:nonNegativeInteger ;
             rdfs:comment "A person's age  in years" .


###  http://ebiq.org/ontologies/peeps/#hasSex
peeps:hasSex rdf:type owl:DatatypeProperty ,
                      owl:FunctionalProperty ;
             rdfs:domain peeps:Person ;
             rdfs:range [ rdf:type rdfs:Datatype ;
                          owl:oneOf [ rdf:type rdf:List ;
                                      rdf:first "female" ;
                                      rdf:rest [ rdf:type rdf:List ;
                                                 rdf:first "male" ;
                                                 rdf:rest rdf:nil
                                               ]
                                    ]
                        ] ;
             rdfs:comment "The sex of a person, which must be a string which is either \"male\" or \"female\"" .


#################################################################
#    Classes
#################################################################

###  http://ebiq.org/ontologies/peeps/Adult
:Adult rdf:type owl:Class ;
       owl:equivalentClass [ owl:intersectionOf ( peeps:Person
                                                  [ rdf:type owl:Restriction ;
                                                    owl:onProperty peeps:hasAge ;
                                                    owl:someValuesFrom [ rdf:type rdfs:Datatype ;
                                                                         owl:onDatatype xsd:int ;
                                                                         owl:withRestrictions ( [ xsd:minInclusive 18
                                                                                                ]
                                                                                              )
                                                                       ]
                                                  ]
                                                ) ;
                             rdf:type owl:Class
                           ] ;
       rdfs:subClassOf peeps:Person ;
       rdfs:comment "An Adult is a Person whose age is 18 or older." ;
       rdfs:label "Adult person" .


###  http://ebiq.org/ontologies/peeps/Minor
:Minor rdf:type owl:Class ;
       owl:equivalentClass [ owl:intersectionOf ( peeps:Person
                                                  [ rdf:type owl:Restriction ;
                                                    owl:onProperty peeps:hasAge ;
                                                    owl:someValuesFrom [ rdf:type rdfs:Datatype ;
                                                                         owl:onDatatype xsd:int ;
                                                                         owl:withRestrictions ( [ xsd:maxExclusive 18
                                                                                                ]
                                                                                              )
                                                                       ]
                                                  ]
                                                ) ;
                             rdf:type owl:Class
                           ] ;
       rdfs:subClassOf peeps:Person .


###  http://ebiq.org/ontologies/peeps/#Boy
peeps:Boy rdf:type owl:Class ;
          owl:equivalentClass [ owl:intersectionOf ( :Minor
                                                     peeps:Man
                                                   ) ;
                                rdf:type owl:Class
                              ] ;
          rdfs:subClassOf peeps:Man ;
          rdfs:comment "A Boy is defined as the intersection of Man and Minor, i.e., a male person whose age is less than 18." ;
          rdfs:label "Boy" .


###  http://ebiq.org/ontologies/peeps/#Man
peeps:Man rdf:type owl:Class ;
          owl:equivalentClass [ owl:intersectionOf ( peeps:Person
                                                     [ rdf:type owl:Restriction ;
                                                       owl:onProperty peeps:hasSex ;
                                                       owl:hasValue "male"
                                                     ]
                                                   ) ;
                                rdf:type owl:Class
                              ] ;
          owl:disjointWith peeps:Woman ;
          rdfs:comment "A Man is defined as a person with a has_sex value equal to \"male\"." ;
          rdfs:label "Male person" .


###  http://ebiq.org/ontologies/peeps/#Person
peeps:Person rdf:type owl:Class ;
             owl:equivalentClass [ rdf:type owl:Restriction ;
                                   owl:onProperty peeps:hasParent ;
                                   owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                                   owl:onClass peeps:Man
                                 ] ,
                                 [ rdf:type owl:Restriction ;
                                   owl:onProperty peeps:hasParent ;
                                   owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                                   owl:onClass peeps:Woman
                                 ] ;
             rdfs:subClassOf <http://xmlns.com/foaf/0.1/Person> ;
             owl:disjointUnionOf ( :Adult
                                   :Minor
                                 ) ,
                                 ( peeps:Man
                                   peeps:Woman
                                 ) ;
             rdfs:comment "A class representing a person.  We use an equivalent axiom and  restrictions to specify that every person nas one male parent and one dfemale parent.  We assert that Person is equivalent to the disjoint union of Man and Woman and also equivalent to the disjoint unionfn of Adult and Minor." ;
             rdfs:label "Person" .


###  http://ebiq.org/ontologies/peeps/#Woman
peeps:Woman rdf:type owl:Class ;
            owl:equivalentClass [ owl:intersectionOf ( peeps:Person
                                                       [ rdf:type owl:Restriction ;
                                                         owl:onProperty peeps:hasSex ;
                                                         owl:hasValue "female"
                                                       ]
                                                     ) ;
                                  rdf:type owl:Class
                                ] ;
            rdfs:comment "A Woman is defined as a Person with a has_sex property whose value is \"female\"." .


###  http://xmlns.com/foaf/0.1/Person
<http://xmlns.com/foaf/0.1/Person> rdf:type owl:Class .


#################################################################
#    Rules
#################################################################

<urn:swrl#p2> rdf:type swrl:Variable .

<urn:swrl#p1> rdf:type swrl:Variable .

:p1 rdf:type swrl:Variable .

:p2 rdf:type swrl:Variable .

<urn:swrl#a1> rdf:type swrl:Variable .

<urn:swrl#a2> rdf:type swrl:Variable .

[ rdf:type swrl:Imp ;
   swrl:body [ rdf:type swrl:AtomList ;
               rdf:first [ rdf:type swrl:ClassAtom ;
                           swrl:classPredicate peeps:Woman ;
                           swrl:argument1 <urn:swrl#p2>
                         ] ;
               rdf:rest [ rdf:type swrl:AtomList ;
                          rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                                      swrl:propertyPredicate peeps:hasParent ;
                                      swrl:argument1 <urn:swrl#p1> ;
                                      swrl:argument2 <urn:swrl#p2>
                                    ] ;
                          rdf:rest rdf:nil
                        ]
             ] ;
   swrl:head [ rdf:type swrl:AtomList ;
               rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                           swrl:propertyPredicate :hasMother ;
                           swrl:argument1 <urn:swrl#p1> ;
                           swrl:argument2 <urn:swrl#p2>
                         ] ;
               rdf:rest rdf:nil
             ]
 ] .

[ <http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean ;
   rdfs:comment ""^^xsd:string ;
   rdfs:label "S1"^^xsd:string ;
   rdf:type swrl:Imp ;
   swrl:body [ rdf:type swrl:AtomList ;
               rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                           swrl:propertyPredicate peeps:hasParent ;
                           swrl:argument1 :p1 ;
                           swrl:argument2 :p2
                         ] ;
               rdf:rest rdf:nil
             ] ;
   swrl:head [ rdf:type swrl:AtomList ;
               rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                           swrl:propertyPredicate :youngerThan ;
                           swrl:argument1 :p1 ;
                           swrl:argument2 :p2
                         ] ;
               rdf:rest rdf:nil
             ]
 ] .

[ rdf:type swrl:Imp ;
   swrl:body [ rdf:type swrl:AtomList ;
               rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                           swrl:propertyPredicate peeps:hasAge ;
                           swrl:argument1 <urn:swrl#p1> ;
                           swrl:argument2 <urn:swrl#a1>
                         ] ;
               rdf:rest [ rdf:type swrl:AtomList ;
                          rdf:first [ rdf:type swrl:DatavaluedPropertyAtom ;
                                      swrl:propertyPredicate peeps:hasAge ;
                                      swrl:argument1 <urn:swrl#p2> ;
                                      swrl:argument2 <urn:swrl#a2>
                                    ] ;
                          rdf:rest [ rdf:type swrl:AtomList ;
                                     rdf:first [ rdf:type swrl:BuiltinAtom ;
                                                 swrl:builtin swrlb:lessThan ;
                                                 swrl:arguments ( <urn:swrl#a1>
                                                                  <urn:swrl#a2>
                                                                )
                                               ] ;
                                     rdf:rest rdf:nil
                                   ]
                        ]
             ] ;
   swrl:head [ rdf:type swrl:AtomList ;
               rdf:first [ rdf:type swrl:IndividualPropertyAtom ;
                           swrl:propertyPredicate :youngerThan ;
                           swrl:argument1 <urn:swrl#p1> ;
                           swrl:argument2 <urn:swrl#p2>
                         ] ;
               rdf:rest rdf:nil
             ]
 ] .

###  Generated by the OWL API (version 4.5.6.2018-09-06T00:27:41Z) https://github.com/owlcs/owlapi
